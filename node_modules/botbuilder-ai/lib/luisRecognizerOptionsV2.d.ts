/**
 * @module botbuilder-ai
 */
/**
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
import { LuisRecognizerInternal } from './luisRecognizerOptions';
import { LuisApplication, LuisRecognizerOptionsV2 } from './luisRecognizer';
import { TurnContext, RecognizerResult } from 'botbuilder-core';
export declare function isLuisRecognizerOptionsV2(options: any): options is LuisRecognizerOptionsV2;
export declare class LuisRecognizerV2 extends LuisRecognizerInternal {
    constructor(application: LuisApplication, options?: LuisRecognizerOptionsV2);
    options: LuisRecognizerOptionsV2;
    private luisClient;
    recognizeInternalAsync(context: TurnContext): Promise<RecognizerResult>;
    private normalizeName;
    private getIntents;
    private getEntitiesAndMetadata;
    private populateCompositeEntity;
    private getEntityValue;
    private getEntityMetadata;
    private getNormalizedEntityName;
    /**
 * If a property doesn't exist add it to a new array, otherwise append it to the existing array
 * @param obj Object on which the property is to be set
 * @param key Property Key
 * @param value Property Value
 */
    private addProperty;
    private getSentiment;
    private getUserAgent;
    private emitTraceInfo;
}
